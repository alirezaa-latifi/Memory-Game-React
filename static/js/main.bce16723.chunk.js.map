{"version":3,"sources":["components/Card.js","components/Cards.js","components/App.js","index.js"],"names":["Card","children","flipped","className","Cards","cards","handleChoice","firstChoice","secondChoice","disabled","length","map","card","matched","src","onClick","id","style","gridArea","cardImages","App","useState","setCards","turn","setTurn","setFirstChoice","secodChoice","setSecodChoice","setDisabled","initializer","shuffledCards","index","sort","Math","random","handleTurns","prevTurn","useEffect","console","log","prevCards","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAMeA,EAJF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACtB,OAAO,qBAAKC,UAAS,eAAUD,EAAU,UAAY,IAA9C,SAAqDD,KCoCjDG,EApCD,SAAC,GAMR,IALHC,EAKE,EALFA,MACAC,EAIE,EAJFA,aACAC,EAGE,EAHFA,YACAC,EAEE,EAFFA,aACAC,EACE,EADFA,SAEA,OACI,qBAAKN,UAAU,YAAf,SACKE,EAAMK,OACHL,EAAMM,KAAI,SAACC,GACP,OACI,eAAC,EAAD,CACIV,QACIU,IAASL,GACTK,IAASJ,GACTI,EAAKC,QAJb,UAQI,qBAAKV,UAAU,QAAQW,IAAKF,EAAKE,MACjC,qBACIX,UAAU,OACVW,IAAI,iBACJC,QAAS,kBAAON,GAAYH,EAAaM,QANxCA,EAAKI,OAYtB,mBAAGC,MAAO,CAAEC,SAAU,iBAAtB,kCC7BVC,EAAa,CACf,CAAEL,IAAK,2BACP,CAAEA,IAAK,2BACP,CAAEA,IAAK,yBACP,CAAEA,IAAK,2BACP,CAAEA,IAAK,2BACP,CAAEA,IAAK,2BAgFIM,MA7Ef,WACI,MAA0BC,mBAAS,IAAnC,mBAAOhB,EAAP,KAAciB,EAAd,KACA,EAAwBD,mBAAS,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAsCH,mBAAS,MAA/C,mBAAOd,EAAP,KAAoBkB,EAApB,KACA,EAAsCJ,mBAAS,MAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOZ,EAAP,KAAiBmB,EAAjB,KAGMC,EAAc,WAChB,IAAMC,EAAgB,UAAIX,EAAeA,GACpCR,KAAI,SAACC,EAAMmB,GAAP,mBAAC,eAAsBnB,GAAvB,IAA6BI,GAAIe,EAAQ,EAAGlB,SAAS,OACzDmB,MAAK,kBAAMC,KAAKC,SAAW,MAEhCZ,EAASQ,GACTL,EAAe,MACfE,EAAe,MACfH,EAAQ,IASNW,EAAc,WAChBV,EAAe,MACfE,EAAe,MACfH,GAAQ,SAACY,GAAD,OAAcA,EAAW,KACjCR,GAAY,IAgChB,OA7BAS,qBAAU,WACFX,IACAE,GAAY,GACRrB,EAAYO,MAAQY,EAAYZ,KAChCwB,QAAQC,IAAI,QACZjB,GAAS,SAACkB,GAAD,OACLA,EAAU7B,KAAI,SAACC,GAAD,OACVc,EAAYZ,MAAQF,EAAKE,IAAzB,2BACWF,GADX,IACiBC,SAAS,IAD1B,eAEWD,SAGnB6B,YAAW,WACPN,MACD,OAEHG,QAAQC,IAAI,aACZE,YAAW,WACPN,MACD,SAGZ,CAACT,IAGJW,qBAAU,WACNR,MACD,IAGC,sBAAK1B,UAAU,MAAf,UACI,6CACA,wBAAQY,QAASc,EAAjB,sBACA,cAAC,EAAD,CACIvB,aA9CS,SAACM,GAClBL,EAAcoB,EAAef,GAAQa,EAAeb,IA8C5CP,MAAOA,EACPE,YAAaA,EACbC,aAAckB,EACdjB,SAAUA,IAEd,oBAAGN,UAAU,OAAb,oBAA4BoB,SChFxCmB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.bce16723.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ children, flipped }) => {\n    return <div className={`card ${flipped ? \"flipped\" : \"\"}`}>{children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst Cards = ({\n    cards,\n    handleChoice,\n    firstChoice,\n    secondChoice,\n    disabled,\n}) => {\n    return (\n        <div className=\"card-grid\">\n            {cards.length ? (\n                cards.map((card) => {\n                    return (\n                        <Card\n                            flipped={\n                                card === firstChoice ||\n                                card === secondChoice ||\n                                card.matched\n                            }\n                            key={card.id}\n                        >\n                            <img className=\"front\" src={card.src} />\n                            <img\n                                className=\"back\"\n                                src=\"/img/cover.png\"\n                                onClick={() => !disabled && handleChoice(card)}\n                            />\n                        </Card>\n                    );\n                })\n            ) : (\n                <p style={{ gridArea: \"2 / 2 / 3 / 4\" }}>Loading Cards ...</p>\n            )}\n        </div>\n    );\n};\n\nexport default Cards;\n","import { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport Cards from \"./Cards\";\n\nconst cardImages = [\n    { src: \"/build/img/helmet-1.png\" },\n    { src: \"/build/img/potion-1.png\" },\n    { src: \"/build/img/ring-1.png\" },\n    { src: \"/build/img/scroll-1.png\" },\n    { src: \"/build/img/shield-1.png\" },\n    { src: \"/build/img/sword-1.png\" },\n];\n\nfunction App() {\n    const [cards, setCards] = useState([]);\n    const [turn, setTurn] = useState(0);\n    const [firstChoice, setFirstChoice] = useState(null);\n    const [secodChoice, setSecodChoice] = useState(null);\n    const [disabled, setDisabled] = useState(false);\n\n    // initializer\n    const initializer = () => {\n        const shuffledCards = [...cardImages, ...cardImages]\n            .map((card, index) => ({ ...card, id: index + 1, matched: false }))\n            .sort(() => Math.random() - 0.5);\n\n        setCards(shuffledCards);\n        setFirstChoice(null);\n        setSecodChoice(null);\n        setTurn(0);\n    };\n\n    // handle choice\n    const handleChoice = (card) => {\n        firstChoice ? setSecodChoice(card) : setFirstChoice(card);\n    };\n\n    // handle turns\n    const handleTurns = () => {\n        setFirstChoice(null);\n        setSecodChoice(null);\n        setTurn((prevTurn) => prevTurn + 1);\n        setDisabled(false);\n    };\n    // useEffect : when secondChoice get updated\n    useEffect(() => {\n        if (secodChoice) {\n            setDisabled(true);\n            if (firstChoice.src === secodChoice.src) {\n                console.log(\"same\");\n                setCards((prevCards) =>\n                    prevCards.map((card) =>\n                        secodChoice.src === card.src\n                            ? { ...card, matched: true }\n                            : { ...card }\n                    )\n                );\n                setTimeout(() => {\n                    handleTurns();\n                }, 1000);\n            } else {\n                console.log(\"different\");\n                setTimeout(() => {\n                    handleTurns();\n                }, 1000);\n            }\n        }\n    }, [secodChoice]);\n\n    // useEffect : after first mount\n    useEffect(() => {\n        initializer();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <h1>Magic Match</h1>\n            <button onClick={initializer}>New Game</button>\n            <Cards\n                handleChoice={handleChoice}\n                cards={cards}\n                firstChoice={firstChoice}\n                secondChoice={secodChoice}\n                disabled={disabled}\n            />\n            <p className=\"turn\">Turn : {turn}</p>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}